---
version: "3.3"

services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    # image: ghcr.io/alpineworks/katalog-backend
    ports:
      - "8080:8080"
      - "8081:8081"
      - "50051:50051"
    volumes:
      - ./output:/etc/katalog/output
    environment:
      KATALOG_LOG_LEVEL: "debug"
      KATALOG_DRAGONFLY_HOST: "dragonfly"
      KATALOG_DRAGONFLY_PORT: "6379"
      KATALOG_DRAGONFLY_AUTH: ""
      # yamllint disable-line rule:line-length
      KATALOG_POSTGRES_URL: "postgres://katalog:password@postgres:5432/katalog?sslmode=disable"

      # openssl rand -base64 32
      KATALOG_JWE_SECRET: "c+lnWb9DPKlBdBlpyc8+jx18Hs2tnNVLra7nNFYFq28="

      # openssl enc -aes-128-cbc -k secret -P -pbkdf2
      KATALOG_AES_KEY: "3B553FF2650F88A9674AC505D42AC191"

      KATALOG_METRICS_ENABLED: "true"
      KATALOG_METRICS_PORT: "8081"

      KATALOG_TRACING_ENABLED: "true"
      KATALOG_TRACING_RATIO: "1.0"
      KATALOG_SERVICE_NAME: "katalog-backend"
      KATALOG_SERVICE_VERSION: "0.0.1"

      OTEL_EXPORTER_OTLP_ENDPOINT: "http://tempo:4317"

      # GRPC_GO_LOG_VERBOSITY_LEVEL: 99
      # GRPC_GO_LOG_SEVERITY_LEVEL: info

    depends_on:
      dragonfly:
        condition: service_started
      seedpostgresdb:
        condition: service_completed_successfully
  # frontend:
  #   build:
  #     context: frontend
  #     dockerfile: Dockerfile
  #   # image: ghcr.io/alpineworks/katalog-frontend
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - frontend/.env.docker.local
  #   depends_on:
  #     backend:
  #       condition: service_started
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    ulimits:
      memlock: -1
    ports:
      - "6379:6379"
  postgres:
    image: postgres
    environment:
      POSTGRES_DATABASE: "katalog"
      POSTGRES_USER: "katalog"
      POSTGRES_PASSWORD: "password"
    restart: "no"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U katalog -d katalog'"]
      interval: 10s
      timeout: 3s
      retries: 3
  preseedpostgresdb:
    image: ghcr.io/alpineworks/katalog-migrations:v1.0.2
    environment:
      DATABASE_DRIVER: "postgres"
      DATABASE_USER: "katalog"
      DATABASE_PASSWORD: "password"
      DATABASE_HOST: "postgres"
      DATABASE_PORT: "5432"
      DATABASE_NAME: "katalog"
    depends_on:
      postgres:
        condition: service_healthy
  seedpostgresdb:
    image: migrate/migrate
    volumes:
      - ./docker/postgres/migrations:/migrations
    entrypoint: >
      /bin/sh -c 'sleep 5 && migrate -path=/migrations/ -database
      "postgres://katalog:password@postgres:5432/katalog?sslmode=disable" up'
    depends_on:
      preseedpostgresdb:
        condition: service_completed_successfully

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yaml
      - /tmp/tempo-data:/tmp/tempo
    ports:
      - "4317:4317" # otlp grpc
      - "4318:4318" # otlp http

  grafana:
    image: grafana/grafana
    volumes:
      - ./docker/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
      - ./docker/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3001:3000"
